###############################################################################
# Bazel now uses Bzlmod by default to manage external dependencies.
# Please consider migrating your external dependencies from WORKSPACE to MODULE.bazel.
#
# For more details, please check https://github.com/bazelbuild/bazel/issues/18958
###############################################################################
module(
    name = "artnet-tester",
    version = "1.0",
)

bazel_dep(name = "rules_python", version = "1.5.1")
bazel_dep(name = "googletest", version = "1.15.2")
bazel_dep(name = "abseil-cpp", version = "20240722.0.bcr.2")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_rust", version = "0.61.0")
bazel_dep(name = "rules_uv", version = "0.85.0")
bazel_dep(name = "rules_multirun", version = "0.12.0")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "f5fbd4cee671d8d908f37c83abaf70fba5928fc7",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

crate = use_extension(
    "@rules_rust//crate_universe:extensions.bzl",
    "crate",
)
crate.from_cargo(
    name = "crates_in_workspace",
    cargo_lockfile = "//:Cargo.lock",
    manifests = ["//:Cargo.toml"],
)
use_repo(crate, "crates_in_workspace")

bazel_dep(name = "rules_pyo3", version = "0.0.9")
git_override(
    module_name = "rules_pyo3",
    commit = "40024d0f09b7163f678985ed897e7806c0ff8e08",
    remote = "https://github.com/abrisco/rules_pyo3.git",
)

# Register default toolchains or customize your own.
register_toolchains(
    "@rules_pyo3//pyo3/toolchains:toolchain",
    "@rules_pyo3//pyo3/toolchains:rust_toolchain",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    extra_pip_args = ["--no-cache-dir"],
    hub_name = "pip",
    python_interpreter_target = "@@python3//:bin/python3",
    python_version = "3.11",
    requirements_darwin = "//third_party:requirements_darwin.txt",
    requirements_linux = "//third_party:requirements_linux.txt",
)
use_repo(pip, "pip")
